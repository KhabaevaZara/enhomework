{"ast":null,"code":"var _jsxFileName = \"/Users/zara/Desktop/Zara/github/english/src/pages/Test.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const navigate = useNavigate();\n  const [mode, setMode] = useState('cards');\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [testAnswer, setTestAnswer] = useState('');\n  const [testFeedback, setTestFeedback] = useState('');\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const words = [{\n    english: 'apple',\n    russian: 'яблоко',\n    transcription: '/ˈæpəl/'\n  }, {\n    english: 'house',\n    russian: 'дом',\n    transcription: '/haʊs/'\n  }, {\n    english: 'water',\n    russian: 'вода',\n    transcription: '/ˈwɔːtər/'\n  }, {\n    english: 'happy',\n    russian: 'счастливый',\n    transcription: '/ˈhæpi/'\n  }, {\n    english: 'music',\n    russian: 'музыка',\n    transcription: '/ˈmjuːzɪk/'\n  }, {\n    english: 'dream',\n    russian: 'мечта',\n    transcription: '/driːm/'\n  }, {\n    english: 'light',\n    russian: 'свет',\n    transcription: '/laɪt/'\n  }, {\n    english: 'peace',\n    russian: 'мир',\n    transcription: '/piːs/'\n  }, {\n    english: 'smile',\n    russian: 'улыбка',\n    transcription: '/smaɪl/'\n  }, {\n    english: 'heart',\n    russian: 'сердце',\n    transcription: '/hɑːrt/'\n  }];\n  const handleBack = () => {\n    navigate(-1);\n  };\n  const handleModeChange = newMode => {\n    setMode(newMode);\n    setCurrentWordIndex(0);\n    setTestAnswer('');\n    setTestFeedback('');\n    setShowFeedback(false);\n    setCorrectAnswers(0);\n    setTotalQuestions(0);\n  };\n  const handleCardFlip = () => {\n    // Card flip logic would be implemented here\n  };\n  const handleNextCard = () => {\n    setCurrentWordIndex(prev => (prev + 1) % words.length);\n  };\n  const handlePreviousCard = () => {\n    setCurrentWordIndex(prev => (prev - 1 + words.length) % words.length);\n  };\n  const handleTestSubmit = () => {\n    const currentWord = words[currentWordIndex];\n    const isCorrect = testAnswer.toLowerCase().trim() === currentWord.russian.toLowerCase();\n    setTestFeedback(isCorrect ? 'Правильно!' : `Неправильно! Правильный ответ: ${currentWord.russian}`);\n    setShowFeedback(true);\n    if (isCorrect) {\n      setCorrectAnswers(prev => prev + 1);\n    }\n    setTotalQuestions(prev => prev + 1);\n  };\n  const handleNextTest = () => {\n    setCurrentWordIndex(prev => (prev + 1) % words.length);\n    setTestAnswer('');\n    setTestFeedback('');\n    setShowFeedback(false);\n  };\n  const renderCardsMode = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-card active\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-front\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: words[currentWordIndex].english\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"transcription\",\n          children: words[currentWordIndex].transcription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn flip-btn\",\n          onClick: handleCardFlip,\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-back\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: words[currentWordIndex].russian\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn flip-btn\",\n          onClick: handleCardFlip,\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0441\\u043B\\u043E\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handlePreviousCard,\n        children: \"\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0435\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleNextCard,\n        children: \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0435\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n  const renderTestMode = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-mode active\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u0435\\u0440\\u0435\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043B\\u043E\\u0432\\u043E \\u043D\\u0430 \\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-word\",\n      children: words[currentWordIndex].english\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"testAnswer\",\n      value: testAnswer,\n      onChange: e => setTestAnswer(e.target.value),\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), showFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `test-feedback ${testFeedback.includes('Правильно') ? 'correct' : 'error'}`,\n      children: testFeedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-controls\",\n      children: !showFeedback ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleTestSubmit,\n        children: \"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleNextTest,\n        children: \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0435\\u0435 \\u0441\\u043B\\u043E\\u0432\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n  const renderMatchMode = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"match-mode active\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u043E\\u043F\\u043E\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0441\\u043B\\u043E\\u0432\\u0430:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"english-words\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0410\\u043D\\u0433\\u043B\\u0438\\u0439\\u0441\\u043A\\u0438\\u0435 \\u0441\\u043B\\u043E\\u0432\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), words.slice(0, 5).map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-item\",\n          children: word.english\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"russian-words\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0435 \\u0441\\u043B\\u043E\\u0432\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), words.slice(0, 5).map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-item\",\n          children: word.russian\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: handleBack,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), \" \\u041D\\u0430\\u0437\\u0430\\u0434\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-graduation-cap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), \" \\u0422\\u0435\\u0441\\u0442 \\u0441\\u043B\\u043E\\u0432\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0440\\u0435\\u0436\\u0438\\u043C \\u0438\\u0437\\u0443\\u0447\\u0435\\u043D\\u0438\\u044F \\u0430\\u043D\\u0433\\u043B\\u0438\\u0439\\u0441\\u043A\\u0438\\u0445 \\u0441\\u043B\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mode-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0440\\u0435\\u0436\\u0438\\u043C:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mode-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `mode-btn ${mode === 'cards' ? 'active' : ''}`,\n          onClick: () => handleModeChange('cards'),\n          children: \"\\u041A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `mode-btn ${mode === 'test' ? 'active' : ''}`,\n          onClick: () => handleModeChange('test'),\n          children: \"\\u0422\\u0435\\u0441\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `mode-btn ${mode === 'match' ? 'active' : ''}`,\n          onClick: () => handleModeChange('match'),\n          children: \"\\u0421\\u043E\\u043F\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), mode === 'cards' && renderCardsMode(), mode === 'test' && renderTestMode(), mode === 'match' && renderMatchMode(), totalQuestions > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u041F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0445 \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432: \", correctAnswers]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u0412\\u0441\\u0435\\u0433\\u043E \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432: \", totalQuestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${correctAnswers / totalQuestions * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"Xkt4cFy2CNqL9mcCw4N3vraUct4=\", false, function () {\n  return [useNavigate];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Test","_s","navigate","mode","setMode","currentWordIndex","setCurrentWordIndex","testAnswer","setTestAnswer","testFeedback","setTestFeedback","showFeedback","setShowFeedback","correctAnswers","setCorrectAnswers","totalQuestions","setTotalQuestions","words","english","russian","transcription","handleBack","handleModeChange","newMode","handleCardFlip","handleNextCard","prev","length","handlePreviousCard","handleTestSubmit","currentWord","isCorrect","toLowerCase","trim","handleNextTest","renderCardsMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderTestMode","type","id","value","onChange","e","target","placeholder","includes","renderMatchMode","slice","map","word","index","style","width","_c","$RefreshReg$"],"sources":["/Users/zara/Desktop/Zara/github/english/src/pages/Test.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Test: React.FC = () => {\n  const navigate = useNavigate();\n  const [mode, setMode] = useState<'cards' | 'test' | 'match'>('cards');\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [testAnswer, setTestAnswer] = useState('');\n  const [testFeedback, setTestFeedback] = useState('');\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n\n  const words = [\n    { english: 'apple', russian: 'яблоко', transcription: '/ˈæpəl/' },\n    { english: 'house', russian: 'дом', transcription: '/haʊs/' },\n    { english: 'water', russian: 'вода', transcription: '/ˈwɔːtər/' },\n    { english: 'happy', russian: 'счастливый', transcription: '/ˈhæpi/' },\n    { english: 'music', russian: 'музыка', transcription: '/ˈmjuːzɪk/' },\n    { english: 'dream', russian: 'мечта', transcription: '/driːm/' },\n    { english: 'light', russian: 'свет', transcription: '/laɪt/' },\n    { english: 'peace', russian: 'мир', transcription: '/piːs/' },\n    { english: 'smile', russian: 'улыбка', transcription: '/smaɪl/' },\n    { english: 'heart', russian: 'сердце', transcription: '/hɑːrt/' }\n  ];\n\n  const handleBack = () => {\n    navigate(-1);\n  };\n\n  const handleModeChange = (newMode: 'cards' | 'test' | 'match') => {\n    setMode(newMode);\n    setCurrentWordIndex(0);\n    setTestAnswer('');\n    setTestFeedback('');\n    setShowFeedback(false);\n    setCorrectAnswers(0);\n    setTotalQuestions(0);\n  };\n\n  const handleCardFlip = () => {\n    // Card flip logic would be implemented here\n  };\n\n  const handleNextCard = () => {\n    setCurrentWordIndex((prev) => (prev + 1) % words.length);\n  };\n\n  const handlePreviousCard = () => {\n    setCurrentWordIndex((prev) => (prev - 1 + words.length) % words.length);\n  };\n\n  const handleTestSubmit = () => {\n    const currentWord = words[currentWordIndex];\n    const isCorrect = testAnswer.toLowerCase().trim() === currentWord.russian.toLowerCase();\n    \n    setTestFeedback(isCorrect ? 'Правильно!' : `Неправильно! Правильный ответ: ${currentWord.russian}`);\n    setShowFeedback(true);\n    \n    if (isCorrect) {\n      setCorrectAnswers(prev => prev + 1);\n    }\n    setTotalQuestions(prev => prev + 1);\n  };\n\n  const handleNextTest = () => {\n    setCurrentWordIndex((prev) => (prev + 1) % words.length);\n    setTestAnswer('');\n    setTestFeedback('');\n    setShowFeedback(false);\n  };\n\n  const renderCardsMode = () => (\n    <div className=\"word-card active\">\n      <div className=\"card-inner\">\n        <div className=\"card-front\">\n          <h2>{words[currentWordIndex].english}</h2>\n          <p className=\"transcription\">{words[currentWordIndex].transcription}</p>\n          <button className=\"btn flip-btn\" onClick={handleCardFlip}>\n            Показать перевод\n          </button>\n        </div>\n        <div className=\"card-back\">\n          <h2>{words[currentWordIndex].russian}</h2>\n          <button className=\"btn flip-btn\" onClick={handleCardFlip}>\n            Показать слово\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"card-controls\">\n        <button className=\"btn\" onClick={handlePreviousCard}>\n          Предыдущее\n        </button>\n        <button className=\"btn\" onClick={handleNextCard}>\n          Следующее\n        </button>\n      </div>\n    </div>\n  );\n\n  const renderTestMode = () => (\n    <div className=\"test-mode active\">\n      <h2>Переведите слово на русский:</h2>\n      <div className=\"test-word\">{words[currentWordIndex].english}</div>\n      \n      <input\n        type=\"text\"\n        id=\"testAnswer\"\n        value={testAnswer}\n        onChange={(e) => setTestAnswer(e.target.value)}\n        placeholder=\"Введите перевод...\"\n      />\n      \n      {showFeedback && (\n        <div className={`test-feedback ${testFeedback.includes('Правильно') ? 'correct' : 'error'}`}>\n          {testFeedback}\n        </div>\n      )}\n      \n      <div className=\"test-controls\">\n        {!showFeedback ? (\n          <button className=\"btn\" onClick={handleTestSubmit}>\n            Проверить\n          </button>\n        ) : (\n          <button className=\"btn\" onClick={handleNextTest}>\n            Следующее слово\n          </button>\n        )}\n      </div>\n    </div>\n  );\n\n  const renderMatchMode = () => (\n    <div className=\"match-mode active\">\n      <h2>Сопоставьте слова:</h2>\n      <div className=\"match-container\">\n        <div className=\"english-words\">\n          <h3>Английские слова</h3>\n          {words.slice(0, 5).map((word, index) => (\n            <div key={index} className=\"match-item\">\n              {word.english}\n            </div>\n          ))}\n        </div>\n        <div className=\"russian-words\">\n          <h3>Русские слова</h3>\n          {words.slice(0, 5).map((word, index) => (\n            <div key={index} className=\"match-item\">\n              {word.russian}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"container\">\n      <button className=\"back-button\" onClick={handleBack}>\n        <i className=\"fas fa-arrow-left\"></i> Назад\n      </button>\n\n      <header>\n        <h1><i className=\"fas fa-graduation-cap\"></i> Тест слов</h1>\n        <p>Выберите режим изучения английских слов</p>\n      </header>\n\n      <div className=\"mode-selection\">\n        <h2>Выберите режим:</h2>\n        <div className=\"mode-buttons\">\n          <button \n            className={`mode-btn ${mode === 'cards' ? 'active' : ''}`}\n            onClick={() => handleModeChange('cards')}\n          >\n            Карточки\n          </button>\n          <button \n            className={`mode-btn ${mode === 'test' ? 'active' : ''}`}\n            onClick={() => handleModeChange('test')}\n          >\n            Тест\n          </button>\n          <button \n            className={`mode-btn ${mode === 'match' ? 'active' : ''}`}\n            onClick={() => handleModeChange('match')}\n          >\n            Сопоставление\n          </button>\n        </div>\n      </div>\n\n      {mode === 'cards' && renderCardsMode()}\n      {mode === 'test' && renderTestMode()}\n      {mode === 'match' && renderMatchMode()}\n\n      {totalQuestions > 0 && (\n        <div className=\"progress-section\">\n          <div className=\"progress-info\">\n            <span>Правильных ответов: {correctAnswers}</span>\n            <span>Всего вопросов: {totalQuestions}</span>\n          </div>\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\" \n              style={{ width: `${(correctAnswers / totalQuestions) * 100}%` }}\n            ></div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Test;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}